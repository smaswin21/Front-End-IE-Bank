name: ie-bank-frontend

on:
  push:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  SUBSCRIPTION_ID: e0b9cada-61bc-4b5a-bd7a-52c606726b3b
  DEV_RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-DEV
  UAT_RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-UAT
  PROD_RESOURCE_GROUP: BCSAI2024-DEVOPS-STUDENTS-B-PROD

  

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  build-dev:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'   # Set Node.js version explicitly

      - name: Retrieve Application Insights Secrets
        id: fetch-appinsights-secrets
        run: |
          INSTRUMENTATION_KEY=$(az keyvault secret show --vault-name money404-kv-dev --name instrumentationKey --query value -o tsv)
          CONNECTION_STRING=$(az keyvault secret show --vault-name money404-kv-dev --name connectionString --query value -o tsv)
          echo "VUE_APP_APPINSIGHTS_INSTRUMENTATION_KEY=$INSTRUMENTATION_KEY" >> $GITHUB_ENV
          echo "VUE_APP_APPINSIGHTS_CONNECTION_STRING=$CONNECTION_STRING" >> $GITHUB_ENV

      - name: npm install, build, and test (Development)
        run: |
          npm install
          VUE_APP_APPINSIGHTS_CONNECTION_STRING=$VUE_APP_APPINSIGHTS_CONNECTION_STRING npm run build:dev
        env:
          VUE_APP_APPINSIGHTS_CONNECTION_STRING: ${{ env.VUE_APP_APPINSIGHTS_CONNECTION_STRING }}

      - name: Upload artifact for deployment job (Development)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-dev
          path: dist-dev/

  deploy-dev:
    if: github.ref != 'refs/heads/main' && github.event_name == 'push'  || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    needs: build-dev
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build-dev job
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Azure Static Web App API Token (Development)
        run: |
          TOKEN=$(az staticwebapp secrets list --name $SWA_NAME --resource-group $DEV_RESOURCE_GROUP --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN_DEV=$TOKEN" >> $GITHUB_ENV
        shell: bash
        env:
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          SWA_NAME: money404-swa-dev
          DEV_RESOURCE_GROUP: ${{ env.DEV_RESOURCE_GROUP }}


      - name: Deploy to Azure Static Web App (Development)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          action: "upload"

  build-uat:
    if: github.event.pull_request.base.ref == 'main' || github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'   # Ensure Node.js version is consistent

      - name: Retrieve Application Insights Secrets
        id: fetch-appinsights-secrets
        run: |
          INSTRUMENTATION_KEY=$(az keyvault secret show --vault-name money404-kv-uat --name instrumentationKey --query value -o tsv)
          CONNECTION_STRING=$(az keyvault secret show --vault-name money404-kv-uat --name connectionString --query value -o tsv)
          echo "VUE_APP_APPINSIGHTS_INSTRUMENTATION_KEY=$INSTRUMENTATION_KEY" >> $GITHUB_ENV
          echo "VUE_APP_APPINSIGHTS_CONNECTION_STRING=$CONNECTION_STRING" >> $GITHUB_ENV

      - name: npm install, build, and test (UAT)
        run: |
          npm install
          VUE_APP_APPINSIGHTS_CONNECTION_STRING=$VUE_APP_APPINSIGHTS_CONNECTION_STRING npm run build:uat
        env:
          VUE_APP_APPINSIGHTS_CONNECTION_STRING: ${{ env.VUE_APP_APPINSIGHTS_CONNECTION_STRING }}

      - name: Upload artifact for deployment job (UAT)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-uat
          path: dist-uat/

  deploy-uat:
    runs-on: ubuntu-latest
    needs: build-uat
    environment:
      name: 'UAT'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build-uat job
        uses: actions/download-artifact@v4
        with:
          name: node-app-uat

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Retrieve Azure Static Web App API Token (UAT)
        run: |
          TOKEN=$(az staticwebapp secrets list --name $SWA_NAME --resource-group $UAT_RESOURCE_GROUP --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN_UAT=$TOKEN" >> $GITHUB_ENV
        shell: bash
        env:
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          SWA_NAME: money404-swa-uat
          DEV_RESOURCE_GROUP: ${{ env.UAT_RESOURCE_GROUP }}

      - name: Deploy to Azure Static Web App (UAT)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN_UAT }}
          action: "upload"

  build-prod:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'   # Set Node.js version explicitly

      - name: Retrieve Application Insights Secrets
        id: fetch-appinsights-secrets
        run: |
          INSTRUMENTATION_KEY=$(az keyvault secret show --vault-name money404-kv-prod --name instrumentationKey --query value -o tsv)
          CONNECTION_STRING=$(az keyvault secret show --vault-name money404-kv-prod --name connectionString --query value -o tsv)
          echo "VUE_APP_APPINSIGHTS_INSTRUMENTATION_KEY=$INSTRUMENTATION_KEY" >> $GITHUB_ENV
          echo "VUE_APP_APPINSIGHTS_CONNECTION_STRING=$CONNECTION_STRING" >> $GITHUB_ENV

      - name: npm install, build, and test (Production)
        run: |
          npm install
          VUE_APP_APPINSIGHTS_CONNECTION_STRING=$VUE_APP_APPINSIGHTS_CONNECTION_STRING npm run build:prod
        env:
          VUE_APP_APPINSIGHTS_CONNECTION_STRING: ${{ env.VUE_APP_APPINSIGHTS_CONNECTION_STRING }}

      - name: Upload artifact for deployment job (Production)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-prod
          path: dist/

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [build-prod, deploy-uat]
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build-dev job
        uses: actions/download-artifact@v4
        with:
          name: node-app-prod

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: Retrieve Azure Static Web App API Token (PROD)
        run: |
          TOKEN=$(az staticwebapp secrets list --name $SWA_NAME --resource-group $PROD_RESOURCE_GROUP --query "properties.apiKey" -o tsv)
          echo "AZURE_STATIC_WEB_APPS_API_TOKEN_PROD=$TOKEN" >> $GITHUB_ENV
        shell: bash
        env:
          SUBSCRIPTION_ID: ${{ env.SUBSCRIPTION_ID }}
          SWA_NAME: money404-swa-prod
          DEV_RESOURCE_GROUP: ${{ env.PROD_RESOURCE_GROUP }}

      - name: Deploy to Azure Static Web App (Production)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.AZURE_STATIC_WEB_APPS_API_TOKEN_PROD }}
          action: "upload"
